{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kishore\\\\demo\\\\client\\\\src\\\\Login.js\",\n  _s = $RefreshSig$();\n// client/src/Login.js\nimport React, { useState } from 'react';\nimport axios from './api'; // Ensure this points to your Axios instance\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [dynamicPassword, setDynamicPassword] = useState('');\n  const [uniqueValue, setUniqueValue] = useState('');\n  const [fixedValue, setFixedValue] = useState('');\n  const [trigFunction, setTrigFunction] = useState('sin');\n  const p = \"45\";\n  const calculateDynamicPassword = () => {\n    const currentHour = new Date().getHours();\n    const digitSum = p.split('').reduce((sum, char) => sum + parseInt(char, 10), 0); // Sum of numeric values\n\n    // Calculate the angle based on the current hour and fixed value\n    const angle = currentHour - parseFloat(fixedValue);\n\n    // Calculate the trigonometric result based on the selected function\n    let trigResult;\n    switch (trigFunction) {\n      case 'sin':\n        trigResult = Math.sin(angle);\n        break;\n      case 'cos':\n        trigResult = Math.cos(angle);\n        break;\n      case 'tan':\n        trigResult = Math.tan(angle);\n        break;\n      default:\n        trigResult = Math.sin(angle);\n      // Default to sin\n    }\n\n    // Calculate the final dynamic password\n    const calculatedPassword = (digitSum * parseFloat(uniqueValue) * Math.sin(parseFloat(fixedValue)) * trigResult).toFixed(3);\n    setDynamicPassword(calculatedPassword); // Set the dynamic password in state\n  };\n  const handleLogin = async e => {\n    e.preventDefault();\n    const calculatedDynamicPassword = dynamicPassword; // Use the password already set\n    try {\n      const res = await axios.post('/auth/login', {\n        username,\n        dynamicPassword: calculatedDynamicPassword\n      });\n      alert('Login successful!');\n    } catch (error) {\n      console.error(error);\n      alert('Login failed: ' + error.response.data.error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        placeholder: \"Username\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: uniqueValue,\n        onChange: e => setUniqueValue(e.target.value),\n        placeholder: \"Unique Value\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: fixedValue,\n        onChange: e => setFixedValue(e.target.value),\n        placeholder: \"Fixed Value\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: trigFunction,\n        onChange: e => setTrigFunction(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"sin\",\n          children: \"Sin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"cos\",\n          children: \"Cos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"tan\",\n          children: \"Tan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: dynamicPassword,\n        readOnly: true,\n        placeholder: \"Dynamic Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: calculateDynamicPassword,\n        children: \"Calculate Dynamic Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"BVht3vLBDdqDu1d4mPdW3yJ6PHw=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Login","_s","username","setUsername","dynamicPassword","setDynamicPassword","uniqueValue","setUniqueValue","fixedValue","setFixedValue","trigFunction","setTrigFunction","p","calculateDynamicPassword","currentHour","Date","getHours","digitSum","split","reduce","sum","char","parseInt","angle","parseFloat","trigResult","Math","sin","cos","tan","calculatedPassword","toFixed","handleLogin","e","preventDefault","calculatedDynamicPassword","res","post","alert","error","console","response","data","children","onSubmit","type","value","onChange","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","readOnly","onClick","_c","$RefreshReg$"],"sources":["C:/Users/kishore/demo/client/src/Login.js"],"sourcesContent":["// client/src/Login.js\r\nimport React, { useState } from 'react';\r\nimport axios from './api'; // Ensure this points to your Axios instance\r\n\r\nfunction Login() {\r\n    const [username, setUsername] = useState('');\r\n    const [dynamicPassword, setDynamicPassword] = useState('');\r\n    const [uniqueValue, setUniqueValue] = useState('');\r\n    const [fixedValue, setFixedValue] = useState('');\r\n    const [trigFunction, setTrigFunction] = useState('sin');\r\n    const p = \"45\";\r\n\r\n    const calculateDynamicPassword = () => {\r\n        const currentHour = new Date().getHours();\r\n        const digitSum = p.split('').reduce((sum, char) => sum + parseInt(char, 10), 0); // Sum of numeric values\r\n\r\n        // Calculate the angle based on the current hour and fixed value\r\n        const angle = currentHour - parseFloat(fixedValue);\r\n\r\n        // Calculate the trigonometric result based on the selected function\r\n        let trigResult;\r\n        switch (trigFunction) {\r\n            case 'sin':\r\n                trigResult = Math.sin(angle);\r\n                break;\r\n            case 'cos':\r\n                trigResult = Math.cos(angle);\r\n                break;\r\n            case 'tan':\r\n                trigResult = Math.tan(angle);\r\n                break;\r\n            default:\r\n                trigResult = Math.sin(angle); // Default to sin\r\n        }\r\n\r\n        // Calculate the final dynamic password\r\n        const calculatedPassword = (digitSum * parseFloat(uniqueValue) * Math.sin(parseFloat(fixedValue)) * trigResult).toFixed(3);\r\n        setDynamicPassword(calculatedPassword); // Set the dynamic password in state\r\n    };\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n        const calculatedDynamicPassword = dynamicPassword; // Use the password already set\r\n        try {\r\n            const res = await axios.post('/auth/login', {\r\n                username,\r\n                dynamicPassword: calculatedDynamicPassword\r\n            });\r\n            alert('Login successful!');\r\n        } catch (error) {\r\n            console.error(error);\r\n            alert('Login failed: ' + error.response.data.error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleLogin}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={username}\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                    placeholder=\"Username\"\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"number\"\r\n                    value={uniqueValue}\r\n                    onChange={(e) => setUniqueValue(e.target.value)}\r\n                    placeholder=\"Unique Value\"\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"number\"\r\n                    value={fixedValue}\r\n                    onChange={(e) => setFixedValue(e.target.value)}\r\n                    placeholder=\"Fixed Value\"\r\n                    required\r\n                />\r\n                <select value={trigFunction} onChange={(e) => setTrigFunction(e.target.value)}>\r\n                    <option value=\"sin\">Sin</option>\r\n                    <option value=\"cos\">Cos</option>\r\n                    <option value=\"tan\">Tan</option>\r\n                </select>\r\n                <input\r\n                    type=\"text\"\r\n                    value={dynamicPassword}\r\n                    readOnly\r\n                    placeholder=\"Dynamic Password\"\r\n                />\r\n                <button type=\"button\" onClick={calculateDynamicPassword}>\r\n                    Calculate Dynamic Password\r\n                </button>\r\n                <button type=\"submit\">Login</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}