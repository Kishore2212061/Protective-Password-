{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kishore\\\\demo\\\\client\\\\src\\\\Login.js\",\n  _s = $RefreshSig$();\n// client/src/Login.js\nimport React, { useState } from 'react';\nimport axios from './api'; // Ensure this points to your Axios instance\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState(''); // State for password\n  const [dynamicPassword, setDynamicPassword] = useState('');\n  const [uniqueValue, setUniqueValue] = useState('');\n  const [fixedValue, setFixedValue] = useState('');\n  const [keyValue, setKeyValue] = useState(''); // New state for keyValue\n  const [trigFunction, setTrigFunction] = useState('sin');\n  const calculateDynamicPassword = () => {\n    const digitSum = password.split('').reduce((sum, char) => sum + (parseInt(char, 10) || 0), 0); // Sum of numeric values of the password\n\n    // Get the current date (day of the month)\n    const currentDate = new Date().getDate();\n\n    // Calculate the angle based on the current date and the fixed value\n    const angle = currentDate + parseFloat(keyValue); // Add keyValue instead of subtracting fixedValue\n\n    // Calculate the trigonometric result based on the selected function\n    let trigResult;\n    switch (trigFunction) {\n      case 'sin':\n        trigResult = Math.sin(angle);\n        break;\n      case 'cos':\n        trigResult = Math.cos(angle);\n        break;\n      case 'tan':\n        trigResult = Math.tan(angle);\n        break;\n      default:\n        trigResult = Math.sin(angle);\n      // Default to sin\n    }\n\n    // Calculate the final dynamic password based on the new formula\n    const calculatedPassword = (digitSum * Math.sin(parseFloat(fixedValue)) * parseFloat(uniqueValue) * trigResult).toFixed(3);\n    setDynamicPassword(calculatedPassword); // Set the dynamic password in state\n  };\n  const handleLogin = async e => {\n    e.preventDefault();\n    const calculatedDynamicPassword = dynamicPassword; // Use the calculated dynamic password\n    try {\n      const res = await axios.post('/auth/login', {\n        username,\n        dynamicPassword: calculatedDynamicPassword\n      });\n      alert('Login successful!');\n    } catch (error) {\n      console.error(error);\n      alert('Login failed: ' + error.response.data.error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        placeholder: \"Username\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\" // Change type to password\n        ,\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        placeholder: \"Password\" // Placeholder for the new password field\n        ,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: uniqueValue,\n        onChange: e => setUniqueValue(e.target.value),\n        placeholder: \"Unique Value\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: fixedValue,\n        onChange: e => setFixedValue(e.target.value),\n        placeholder: \"Fixed Value\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: keyValue,\n        onChange: e => setKeyValue(e.target.value),\n        placeholder: \"Key Value\" // New input field for key value\n        ,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: trigFunction,\n        onChange: e => setTrigFunction(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"sin\",\n          children: \"Sin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"cos\",\n          children: \"Cos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"tan\",\n          children: \"Tan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: dynamicPassword,\n        readOnly: true,\n        placeholder: \"Dynamic Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: calculateDynamicPassword,\n        children: \"Calculate Dynamic Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"JhMBC9i80Q2WIQyTaK54Dwl34/I=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","dynamicPassword","setDynamicPassword","uniqueValue","setUniqueValue","fixedValue","setFixedValue","keyValue","setKeyValue","trigFunction","setTrigFunction","calculateDynamicPassword","digitSum","split","reduce","sum","char","parseInt","currentDate","Date","getDate","angle","parseFloat","trigResult","Math","sin","cos","tan","calculatedPassword","toFixed","handleLogin","e","preventDefault","calculatedDynamicPassword","res","post","alert","error","console","response","data","children","onSubmit","type","value","onChange","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","readOnly","onClick","_c","$RefreshReg$"],"sources":["C:/Users/kishore/demo/client/src/Login.js"],"sourcesContent":["// client/src/Login.js\r\nimport React, { useState } from 'react';\r\nimport axios from './api'; // Ensure this points to your Axios instance\r\n\r\nfunction Login() {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState(''); // State for password\r\n    const [dynamicPassword, setDynamicPassword] = useState('');\r\n    const [uniqueValue, setUniqueValue] = useState('');\r\n    const [fixedValue, setFixedValue] = useState('');\r\n    const [keyValue, setKeyValue] = useState(''); // New state for keyValue\r\n    const [trigFunction, setTrigFunction] = useState('sin');\r\n\r\n    const calculateDynamicPassword = () => {\r\n        const digitSum = password.split('').reduce((sum, char) => sum + (parseInt(char, 10) || 0), 0); // Sum of numeric values of the password\r\n\r\n        // Get the current date (day of the month)\r\n        const currentDate = new Date().getDate();\r\n\r\n        // Calculate the angle based on the current date and the fixed value\r\n        const angle = currentDate + parseFloat(keyValue); // Add keyValue instead of subtracting fixedValue\r\n\r\n        // Calculate the trigonometric result based on the selected function\r\n        let trigResult;\r\n        switch (trigFunction) {\r\n            case 'sin':\r\n                trigResult = Math.sin(angle);\r\n                break;\r\n            case 'cos':\r\n                trigResult = Math.cos(angle);\r\n                break;\r\n            case 'tan':\r\n                trigResult = Math.tan(angle);\r\n                break;\r\n            default:\r\n                trigResult = Math.sin(angle); // Default to sin\r\n        }\r\n\r\n        // Calculate the final dynamic password based on the new formula\r\n        const calculatedPassword = (digitSum * Math.sin(parseFloat(fixedValue)) * parseFloat(uniqueValue) * trigResult).toFixed(3);\r\n        setDynamicPassword(calculatedPassword); // Set the dynamic password in state\r\n    };\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n        const calculatedDynamicPassword = dynamicPassword; // Use the calculated dynamic password\r\n        try {\r\n            const res = await axios.post('/auth/login', {\r\n                username,\r\n                dynamicPassword: calculatedDynamicPassword\r\n            });\r\n            alert('Login successful!');\r\n        } catch (error) {\r\n            console.error(error);\r\n            alert('Login failed: ' + error.response.data.error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleLogin}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={username}\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                    placeholder=\"Username\"\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"password\" // Change type to password\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    placeholder=\"Password\" // Placeholder for the new password field\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"number\"\r\n                    value={uniqueValue}\r\n                    onChange={(e) => setUniqueValue(e.target.value)}\r\n                    placeholder=\"Unique Value\"\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"number\"\r\n                    value={fixedValue}\r\n                    onChange={(e) => setFixedValue(e.target.value)}\r\n                    placeholder=\"Fixed Value\"\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"number\"\r\n                    value={keyValue}\r\n                    onChange={(e) => setKeyValue(e.target.value)}\r\n                    placeholder=\"Key Value\" // New input field for key value\r\n                    required\r\n                />\r\n                <select value={trigFunction} onChange={(e) => setTrigFunction(e.target.value)}>\r\n                    <option value=\"sin\">Sin</option>\r\n                    <option value=\"cos\">Cos</option>\r\n                    <option value=\"tan\">Tan</option>\r\n                </select>\r\n                <input\r\n                    type=\"text\"\r\n                    value={dynamicPassword}\r\n                    readOnly\r\n                    placeholder=\"Dynamic Password\"\r\n                />\r\n                <button type=\"button\" onClick={calculateDynamicPassword}>\r\n                    Calculate Dynamic Password\r\n                </button>\r\n                <button type=\"submit\">Login</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}